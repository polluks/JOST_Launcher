;****************************************
; JOST Launcher for 1.3 kickstart
; 2024
; 
; Author: Youen CHENE
;
; Game/Demo launcher for JOST exe to run .slave for WHDLOAD compatible with 1.3 kickstart
;
;****************************************

;NoCli
WBStartup
;CloseWorkBench_

DEFTYPE.w

DELIMITER$=";"
DELIMITERCFG$="="

#DEBUG=0

#SLAVESDIM=255

#InitBufferCursor=4
#InitBufferCursorPage=8

#InitBufferBlinkingOn=40
#InitBufferBlinkingOff=10

#MaxHLine=28

#MOUSETRIGGER=6 ; On CDTV Remote it trigger 6 to 8 on speed

currentScanDir$="RAM:"

AMIGA

NEWTYPE.FileInfoBlock
   _DiskKey.l
   _DirEntryType.l
   _FileName.b[108]
   _Protection.l
   _EntryType.l
   _Size.l
   _NumBlocks.l
   ds_Days.l
   ds_Minute.l
   ds_Tick.l
   _Comment.b[80]
   _Reserved.b[36]
End NEWTYPE

DEFTYPE .FileInfoBlock myfib        ;myfib holds infoblock

NEWTYPE.Slave
    name$
    path$
    slave$
End NEWTYPE

Dim List slaves2.Slave(#SLAVESDIM)


Statement listdir{dir$,curdir$}
  SHARED myfib, slaves2, DELIMITER$
  USEPATH myfib
  lock.l=Lock_(&dir$,-2)                   ;lock is dos system to access files
  countGame.b=0
  If Examine_(lock,myfib)<>0               ;if we get lock on p$
    While ExNext_(lock,myfib)<>0           ;skip through files
      If \_DirEntryType<0                  ;if its not a directory
        filename$ = LSet$(Peek$(&\_FileName),30)  ;30 56 or 106 depends of FFS         
        If Len(filename$)>5
            If Instr(filename$,".Slav")>0  OR  Instr(filename$,".slav")>0
                name$=curdir$
                If countGame > 0
                    name$=name$ +" ("+  StripTrail$(filename$,Asc(" ")) +")"
                EndIf
                NPrint name$,DELIMITER$,dir$,DELIMITER$,filename$
                countGame+1
            EndIf
        EndIf
      Else
        fi$=Peek$(&\_FileName)
        listdir{dir$+"/"+fi$,fi$}
      EndIf
    Wend
  EndIf
  UnLock_ lock
End Statement



.MainLoop:

 Dim List slaves.Slave(100)
 slavesSize.w=0
 NPRINT "Start Loading Config."
 Gosub LoadConfig
  NPRINT "Start Loading Inventory."
 Gosub LoadInventory
 NPRINT "Loading JOST Launcher."
 VWAIT 50

 cursorY.b=0
 previousCursorY.b=0
 cursorX.b=0
 previousCursorX.b=0
 previousCursorPage.w=0
 cursorPage.w=0
 
 DecodeSound 0, ?snd0
 DecodeSound 1, ?snd1
 DecodeSound 2, ?snd2
 DecodeSound 3, ?snd3

 EVEN

 BLITZ  
 MOUSE ON

 VWAIT

 BitMap 0,640,256,2
 BitMapOutput 0 
 Slice 0,44,640,256,$fff9,2,0,4,640,640
 Use Slice 0
 PalRGB 0,0,0,0,0
 PalRGB 0,1,15,15,15
 PalRGB 0,2,8,12,15
 PalRGB 0,3,15,10,5
 Use Palette 0
 CLS 0
 Show 0
 
 previousCursorY=cursorY
 previousCursorX=cursorX

 Locate 1,30.7
 Print "HELP : S or 0 to scan folders"
 Line 10,0,630,0,3
 Line 10,1,630,1,3
 Line 10,240,630,240,3
 Line 10,241,630,241,3
 currentCursorPage=0
 currentColorPage=1
 Gosub DisplayList

 ;Copper Juice
 ColSplit 3,15,10,5,0
 ColSplit 3,14,7,3,1
 For H=0 To 28
  For Y=0 To 4
    ColSplit 2,8+Y,12+Y/2,15,4+Y*2+H*8
  Next
 Next
 ColSplit 3,14,7,3,240
 ColSplit 3,15,10,5,241
 For Y=0 To 4
    ColSplit 3,15,10+Y/2,5+Y,245+Y*2
 Next
 For Y=0 To 4
    ColSplit 1,15-Y,15-Y,15-Y,245+Y*2
 Next
 ;

 updateCursor.b=-1
 updatePage.b=0
 updatePage.b=0
 bufferCursor=0
 launch.q=0
 pathToLaunch$=""
 slaveToLaunch$=""
 blinkingBuffer=#InitBufferBlinkingOn
 blinkingStatus=0

 mx=0
 my=0

;The rawkey codes for the CD audio control keys are: 
;STOP 0x72 
;PLAY/PAUSE 0x73 
;FF 0x74 
;REW 0x75 


 Repeat
    mx=MouseXSpeed
    my=MouseYSpeed

    previousCursorY=cursorY
    previousCursorX=cursorX
    previousCursorPage=cursorPage
    bufferCursor=bufferCursor-1
    blinkingBuffer=blinkingBuffer-1
    ; Scan dir
    If RawStatus($21) OR RawStatus($0F)
      Colour 3,0
      Locate 32,30.7  
      confirmTxt$="Enter or Button1 to confirm / C, Button 2  to cancel"
      NPrint confirmTxt$
      cancel.b=0
      VWAIT 50
      Repeat
        If RawStatus($33) OR Joyb(1)=2 OR Joyb(0)=2
          cancel=-1
        EndIf
        VWAIT
      Until (RawStatus($44) OR Joyb(1)=1 OR Joyb(0)=1 OR cancel)
      Colour 0,0
      Locate 32,30.7  
      NPrint confirmTxt$
      If cancel=0
        Colour 3,0
        Locate 40,30.7  
        NPrint "Scan dir : ",currentScanDir$
        QAMIGA
        Gosub ScanDir
        Gosub LoadInventory
        VWAIT 50
        BitMapOutput 0 
        BLITZ
        Colour 0,0
        Locate 40,30.7  
        NPrint "Scan dir : ",currentScanDir$
        currentCursorPage=cursorPage
        currentColorPage=1
        Gosub DisplayList
      Else
       VWAIT 50
      EndIf
    End If
    ; Enter
    If (Joyb(1)<>0 OR Joyb(0)<>0 OR RawStatus($44)) AND bufferCursor<=0 ;RawStatus($44) OR RawStatus($73)
      Locate 30,30.7
      NPrint "Launching : ",slaves(cursorPage+cursorY)\name
      pathToLaunch$=slaves(cursorPage+cursorY)\path
      slaveToLaunch$=slaves(cursorPage+cursorY)\slave
     launch=-1
      SOUND 3,15
    End If

    ; Up
    If ((RawStatus($4C) OR Joyy(1)=-1 OR my<=-#MOUSETRIGGER) AND bufferCursor<=0) 
      If (cursorPage+cursorY)>0 
        cursorY=cursorY-1
        updateCursor=-1
        ;if previous page
        If cursorY<0
          cursorY=#MaxHLine
          cursorPage=cursorPage-#MaxHLine-1
          updatePage=-2 
        EndIf
        SOUND 1,15
      Else
        SOUND 2,15
        bufferCursor=#InitBufferCursor
      EndIf
    EndIf
    ; down
    If ((RawStatus($4D) OR Joyy(1)=1 OR my>=#MOUSETRIGGER)AND bufferCursor<=0)
      If (cursorPage+cursorY)<slavesSize
        cursorY=cursorY+1
        updateCursor=-1
        ; if next page
        If cursorY>=(#MaxHLine+1)
          cursorPage=cursorPage+(#MaxHLine+1)
          updatePage=-1
          cursorY=0
        EndIf
        SOUND 1,15
      Else
        SOUND 2,15
        bufferCursor=#InitBufferCursor
      EndIf
    EndIf
    ;right
    If (RawStatus($4E) OR Joyx(1)=1 OR mx>=#MOUSETRIGGER) AND bufferCursor<=0
      If (cursorPage+#MaxHLine+1) < slavesSize
        cursorPage=cursorPage+(#MaxHLine+1)
        updatePage=-1
        updateCursor=-1
        If (cursorPage+cursorY > slavesSize)
          cursorY=slavesSize-cursorPage
        EndIf
        SOUND 0,15
      Else
        SOUND 2,15
        bufferCursor=#InitBufferCursor
      EndIf
    EndIf
    ;left
    If (RawStatus($4F) OR Joyx(1)=-1 OR mx<=-#MOUSETRIGGER) AND bufferCursor<=0
      If cursorPage > 0
        cursorPage=cursorPage-(#MaxHLine+1)
        updatePage=-2
        updateCursor=-1
        SOUND 0,15
      Else
        SOUND 2,15
        bufferCursor=#InitBufferCursor
      EndIf
    EndIf
    ; updateCursor
    If updatePage OR updatePage=-2
    
      odd.b=((cursorPage/#MaxHLine) AND $1)
      If  odd = 1
        cursorX=40
      Else
        cursorX=0
      EndIf 
      If (odd = 0 AND updatePage=-1) OR (odd = 1 AND updatePage=-2)
        
        Colour 3,0
        Locate 40,30.7
        If updatePage = -1
          currentCursorPage=previousCursorPage-#MaxHLine-1
        Else
          currentCursorPage=previousCursorPage
        EndIf

        currentColorPage=0
        Gosub DisplayList
        currentColorPage=1
        If updatePage = -1
          currentCursorPage=cursorPage
        Else
          currentCursorPage=cursorPage-#MaxHLine-1
        EndIf
        Gosub DisplayList
        updatePage=2
      Else
        updatePage=0
      EndIf
      bufferCursor=#InitBufferCursorPage
    Else
      If updateCursor 
        bufferCursor=#InitBufferCursor
      EndIf
    EndIf
    If updateCursor 
      Colour 0,0
      Locate previousCursorX+1,0.5+previousCursorY
      Print ">"
      If updatePage = 2
        updatePage=0
      Else
        Colour 2,0
        Locate previousCursorX+3,0.5+previousCursorY
        Print slaves(previousCursorPage+previousCursorY)\name
      EndIf

      Colour 1,0
      Locate cursorX+1,0.5+cursorY
      Print ">"

      Locate cursorX+3,0.5+cursorY
      Print slaves(cursorPage+cursorY)\name

      updateCursor=0
    EndIf
    If blinkingBuffer < 1 
      blinking=-1-blinking
      If blinking
       Colour 0,0
       blinkingBuffer=#InitBufferBlinkingOff
      Else
       Colour 1,0
       blinkingBuffer=#InitBufferBlinkingOn
      EndIf
      Locate cursorX+1,0.5+cursorY
      Print ">"

      Locate cursorX+3,0.5+cursorY
      Print slaves(cursorPage+cursorY)\name
    EndIf
    VWAIT
 Until (RawStatus($45) OR launch)
 VWait 150
 Free BitMap 0
 FreeSlices
 Free Sound 0
 Free Sound 1
 Free Sound 2
 Free Sound 3

If (launch)
  AMIGA 
  WBenchToFront_
  command1$="CD "+pathToLaunch$
  command2$="jst "+slaveToLaunch$
  If WriteFile(0,"RAM:cmd") ;
    FileOutput 0
    NPrint "WAIT 3"
    NPrint command1$
    NPrint command2$
    NPrint "jl"
    CloseFile 0
    DefaultOutput
  EndIf
  Execute_ "EXECUTE RAM:cmd",0,0
;Repeat
; vwait
; Until (RawStatus($45))
End If

End


.LoadConfig:
 If ReadFile (0,"S:jl-config.cfg")
    FileInput 0 
    exit.b=0
    While NOT Eof(O)
      l1$=Edit$(128)
      delimiterPos=Instr(l1$,DELIMITERCFG$)
      If delimiterPos>1
        key$=Left$(l1$,delimiterPos-1)
        value$=UnRight$(l1$,delimiterPos)
        If key$="scan_dir_1"
          currentScanDir$=value$
          NPrint "CurrentScanDir = ",currentScanDir$
        EndIf
      EndIf
    Wend
    CloseFile 0
    DefaultInput
 EndIf
 RETURN

.LoadInventory:
 USEPATH slaves() 
 ResetList slaves()
 While NextItem(slaves())
    KillItem slaves()
 Wend
ResetList slaves()
slavesSize=-1
 If ReadFile (0,"S:jl-inventory.data")
    FileInput 0 
    exit.b=0
    While (NOT Eof(O)) AND AddItem(slaves())
      l1$=Edit$(128)
      delimiterPos=Instr(l1$,DELIMITER$)
      slaves()\name=Left$(l1$,delimiterPos-1)
      l2$=UnRight$(l1$,delimiterPos)
      delimiterPos=Instr(l2$,DELIMITER$)
      slaves()\path=Left$(l2$,delimiterPos-1)
      slaves()\slave=UnRight$(l2$,delimiterPos)
      slavesSize=slavesSize+1
      If #DEBUG
        NPRINT slavesSize," ",slaves()\name
      EndIf
    Wend
    CloseFile 0
    DefaultInput
 EndIf
 RETURN

.ScanDir:
 If WriteFile(0,"S:jl-inventory.data") ;
  FileOutput 0
  listdir {currentScanDir$,""}
  CloseFile 0
  DefaultOutput
 EndIf
 RETURN

.DisplayList:
 BitMapOutput 0 
 If currentColorPage = 0
  Colour 0,0
 Else
  Colour 2,0
 EndIf
 Locate 1,0.5
 yi=0
 xi=0
 For i.w=currentCursorPage To (currentCursorPage+#MaxHLine*2+1)
  If xi<2
    If i<=slavesSize
      Locate 3+xi*40,0.5+yi
      Print slaves(i)\name
      If (yi<#MaxHLine)
        yi=yi+1
      Else
        yi=0
        xi=xi+1
      EndIf
    EndIf
  EndIf
 Next
 RETURN

snd0: IncBin "data/sound0.iff"
snd1: IncBin "data/sound1.iff"
snd2: IncBin "data/sound2.iff"
snd3: IncBin "data/sound3.iff"
